// new module script

function ToggleHotspotsHighlights(){
  int cont;
  int obj_assoc;
  
cont = 1;
  while ( cont < 50 ) {
    obj_assoc = hotspot[cont].GetProperty("object_assoc");
    if ( obj_assoc != -1 && hotspot[cont].Enabled == true) {
      if ( object[obj_assoc].Visible == true ){
        object[obj_assoc].Visible = false;
      } else {
        object[obj_assoc].Visible = true;
      }
    }
    cont++;
  }
}

function MoveViewportToChar(Character* charToMove, int delay){
  int screenWidth = System.ScreenWidth;
  int screenHeight = System.ScreenHeight;
  int charPosX = charToMove.x;
  int charPosY = charToMove.y;
  int xpos = GetViewportX();
  int ypos = GetViewportY();
  int finalXPos = charPosX - screenWidth/2;
  int finalYPos = charPosY - screenHeight/2;
  
  while (xpos != finalXPos && ypos != finalYPos){
    if (xpos < finalXPos){
      xpos++;
    } else {
      xpos--;
    }
    if (ypos < finalYPos){
      ypos++;
    } else {
      ypos--;
    }
    SetViewport(xpos, ypos);
    if (delay > 0)
      Wait(delay);
  }


}

function ShowEmotion(Character* charToEmote,  int emojiSprite,  int delay,  int transp){
  int charWidth = 48;
  int charHeight = 48;
  int xpos = charToEmote.x;
  int ypos = charToEmote.y - charHeight - EMOJI_HEIGHT;
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  DrawingSurface *old = surface.CreateCopy();
  surface.DrawImage(xpos, ypos, emojiSprite, transp,  EMOJI_WIDTH, EMOJI_HEIGHT);
  surface.Release();
  Wait(delay);
  surface = Room.GetDrawingSurfaceForBackground();
  surface.DrawSurface(old);
  old.Release();
}